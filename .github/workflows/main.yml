name: Environment Setup Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  test-environment-setup:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install uv
      run: |
        pip install uv
        
    - name: Create and activate virtual environment
      run: |
        uv venv .venv
        echo "VIRTUAL_ENV=$GITHUB_WORKSPACE/.venv" >> $GITHUB_ENV
        echo "$GITHUB_WORKSPACE/.venv/bin" >> $GITHUB_PATH
        
    - name: Install dependencies from lock file
      run: |
        uv pip install .
        
    - name: Verify critical imports
      run: |
        # Test importing key packages
        python -c "import torch; import monai; import ultralytics; import nibabel; print('✅ Key packages imported successfully')"
        
    - name: Create minimal config
      run: |
        # Create minimal config for testing
        mkdir -p src/config
        echo "paths:" > src/config/config.yaml
        echo "  base_dir: '$GITHUB_WORKSPACE'" >> src/config/config.yaml
        
    - name: Verify config loading
      run: |
        # Create a minimal test script
        cat << EOF > test_config.py
        import sys
        sys.path.append('.')
        try:
            from src.config.config import load_config
            config = load_config()
            print(f"✅ Config loaded successfully. Base directory: {config['paths']['base_dir']}")
            sys.exit(0)
        except Exception as e:
            print(f"❌ Config loading failed: {e}")
            sys.exit(1)
        EOF
        
        python test_config.py
        
    - name: Print environment summary
      run: |
        echo "✅ Environment setup test completed successfully"
        echo "Python version: $(python --version)"
        echo "PyTorch version: $(python -c 'import torch; print(torch.__version__)')"
        echo "MONAI version: $(python -c 'import monai; print(monai.__version__)')"
        echo "Ultralytics version: $(python -c 'import ultralytics; print(ultralytics.__version__)')"
